{"version":3,"sources":["util.js","components/word/Word.js","assets/add.png","components/quote/Quote.js","components/error/Error.js","components/interpretationInput/InterpretationInput.js","components/interpretationIndex/InterpretationIndex.js","assets/bin.png","assets/pencil.png","components/card/Card.js","components/cardsContainer/CardsContainer.js","components/intepretationSubmissionsIndex/IntepretationSubmissionsIndex.js","components/dashboardIndex/DashboardIndex.js","assets/Loading.png","components/categoryIndex/CategoryIndex.js","assets/shakespeare.png","components/app/App.js","reportWebVitals.js","index.js"],"names":["fetchAllTitles","fetch","then","res","ok","json","console","log","catch","err","fetchAllThemes","fetchDefinition","word","fetchQuoteByTitle","title","fetchQuoteByTheme","theme","Word","useState","definition","setDefinition","getDefinition","a","data","meta","def","useEffect","length","className","id","Quote","quote","addQuote","type","disableFavoriteButton","resetDisabledButton","isDisabled","toggleIsDisabled","uuid","words","split","map","onClick","disabled","src","saveIcon","alt","Error","InterpretationInput","handleSubmitInterpretation","handleSubmitEditInterpretation","currentInterpretation","setCurrentInterpretation","setIsDisabled","editedInterpretation","setEditedInterpretation","retrievedItems","JSON","parse","localStorage","getItem","paramIndex","window","location","href","indexOf","quoteId","newList","filter","parseInt","interpretation","checkPlaceholder","handleSubmit","event","placeholder","onChange","preventDefault","target","value","handleChange","to","handleEditChange","InterpretationIndex","addInterpretation","isEditing","editInterpretation","setQuote","error","setError","setDisableFavoriteButton","interpretationId","setInterpretationId","fetchThemeQuote","fetchTitleQuote","fetchByParam","assign","findQuoteFromStorageById","includes","param","Card","componentToRender","cardData","deleteQuote","bin","pencil","CardsContainer","cardComponents","cards","card","InterpretationSubmissionIndex","favorites","savedInterpretations","DashboardIndex","titleOptions","stringify","setItem","themeOptions","CategoryIndex","category","allTitles","setAllTitles","allThemes","setAllThemes","isLoading","setIsLoading","fetchTitles","fetchThemes","fetchType","match","params","themes","retrievedThemes","titles","retrievedTitles","loadingClock","App","setSavedInterpretations","setFavorites","newInterpretation","newInterpretationObj","Date","now","storageInterpretations","newFavorite","favoriteObj","storageFavorites","storageItems","replacementInterpretationObj","toSave","retrievedFavorites","interpretations","retrievedInterpretations","checkLocalStorage","exact","path","render","shakespeareIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2ba2986.chunk.js","sourcesContent":["export const fetchAllTitles = () => {\n  return fetch('https://shakespeare-quotes-generator.herokuapp.com/api/v1/quotes/play-titles').then((res) => res.ok ? res.json() : console.log(\"something went wrong\")).catch(err => err)\n}\n\nexport const fetchAllThemes = () => {\n  return fetch('https://shakespeare-quotes-generator.herokuapp.com/api/v1/quotes/themes').then((res) => res.ok ? res.json() : console.log(\"something went wrong\")).catch(err => err)\n}\n\nexport const fetchDefinition = (word) => {\n  return fetch(`https://dictionaryapi.com/api/v3/references/learners/json/${word}?key=c80e6519-7311-4235-9297-4ba6a1b27611`).then(res => res.ok ? res.json() : console.log(\"something went wrong\")).catch(err => err)\n}\n\nexport const fetchQuoteByTitle = (title) => {\n  return fetch(`https://shakespeare-quotes-generator.herokuapp.com/api/v1/quotes/by-play/${title}`).then((res) => res.ok ? res.json() : console.log(\"something went wrong, res:\", res)).catch(err => err)\n}\n\nexport const fetchQuoteByTheme = (theme) => {\n  return fetch(`https://shakespeare-quotes-generator.herokuapp.com/api/v1/quotes/by-theme/${theme}`).then((res) => res.ok ? res.json() : console.log(\"something went wrong, res:\", res)).catch(err => err)\n}\n","import {useState, useEffect} from 'react';\nimport {fetchDefinition} from '../../util.js'\nimport ReactTooltip from 'react-tooltip';\nimport './Word.css'\n\nconst Word = ({word}) => {\n  const [definition, setDefinition] = useState('')\n\n  const getDefinition = async () => {\n    try {\n      const data = await fetchDefinition(word)\n      setDefinition(data[0].meta['app-shortdef'].def[0])\n    } catch (err) {\n      return\n    }\n  }\n\n  useEffect(() => {  \n    if (word.length >= 5 ) {\n      getDefinition();\n    } \n  }, [])\n\n  return (\n    <div className=\"Word\" key={word}>\n      {word.length >= 5 && definition && (\n         <>\n         <p data-tip data-for={word} className='definition'> <span className=\"defined word\">{word}</span></p>\n        <ReactTooltip id={word}>\n          <span>{definition}</span>\n        </ReactTooltip>\n        </>\n      )}\n      {word.length < 5 && <span className=\"word\">{word}</span>}\n      {word.length >=5 && !definition && <span className=\"word\">{word}</span>}\n    </div>\n  )\n}\n\nexport default Word;\n\n","export default __webpack_public_path__ + \"static/media/add.31409190.png\";","import {useState, useEffect} from 'react';\nimport Word from '../word/Word.js';\nimport './Quote.css';\nimport saveIcon from '../../assets/add.png';\nimport uuid from 'react-uuid';\n\nconst Quote = ({quote, addQuote, type, disableFavoriteButton, resetDisabledButton}) => {\n  const [isDisabled, toggleIsDisabled] = useState(false);\n  const id = uuid();\n  const words = quote.quote.split(\" \").map(word => <Word word={word} id={word} key={uuid()}/> );\n\n  useEffect(() => {\n    if (disableFavoriteButton) {\n      toggleIsDisabled(false)\n    }\n    if (type === 'new'){\n      resetDisabledButton()\n    }\n  }, [disableFavoriteButton, type, resetDisabledButton])\n\n  const handleClick = () => {\n    addQuote(quote.quote, id)\n    toggleIsDisabled(true)\n  }\n \n  return (\n    <>\n      {type === 'new' && (\n        <div className=\"Quote\" id={id} key={id}>\n          <div className=\"words-container\">\n            {words}\n          </div>\n          <button onClick={() => handleClick()} className=\"favorite-btn\" disabled={isDisabled}>\n            <img src={saveIcon} alt='plus sign' className='saveIcon'></img>\n          </button>\n        </div>\n      )}\n        {type === 'edit' && (\n        <div className=\"Quote\" id={id} key={id}>\n          <div className=\"words-container\">\n            {words}\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default Quote;\n","import './Error.css'\n\nconst Error = ({type}) => {\n  let quote;\n  if (type === '404') {\n    quote = (\n      <div className='error-quote'>\n        <span>To be, or not to be, that is the question: </span>\n        <span>Whether 'tis nobler in the mind to suffer</span>\n        <span> The slings and arrows of outrageous fortune,</span>\n        <span>Or to take arms against a sea of troubles </span>\n        <span> And by opposing end them. </span> \n        <span> To die—to sleep, No more </span>\n        <h2>Page Not Found</h2>\n      </div>\n    )\n  } else if (type > 400 || type === \"no quote found\" || \"no options found\") {\n    quote = (\n      <div className='error-quote'>\n        <span> Oh, conspiracy, are you ashamed to show your face even at night, </span>\n        <span> when evil things are most free? If so, when it's day, </span>\n        <span>where are you going to find a cave dark enough to hide your monstrous face? </span>\n        <span>-Julius Caesar: Act 2 Scene 1 Page 4</span>\n        <h2>Internal Server Error.</h2>\n    </div>\n    )\n  } \n\n  return (\n    <div className='Error'>\n      <p>{quote}</p>\n    </div>\n  )\n}\n\nexport default Error;","import {\n  useState,\n  useEffect\n} from 'react';\nimport {\n  Link\n} from 'react-router-dom'\n\nconst InterpretationInput = ({\n  handleSubmitInterpretation,\n  handleSubmitEditInterpretation,\n  type\n}) => {\n  const [currentInterpretation, setCurrentInterpretation] = useState('')\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [editedInterpretation, setEditedInterpretation] = useState(\"Type your interpretation here...\")\n\n  useEffect(() => {\n    const checkPlaceholder = () => {\n      const retrievedItems = JSON.parse(localStorage.getItem('interpretations'))\n      const paramIndex = window.location.href.split('/').indexOf('edit') + 1;\n      const quoteId = window.location.href.split('/')[paramIndex]\n      const newList = retrievedItems.filter(quote => parseInt(quote.id) === parseInt(quoteId));\n      setEditedInterpretation(newList[0].interpretation)\n    }\n    if (type === 'editInterpretation') {\n      checkPlaceholder()\n    }\n  }, [type])\n\n  const handleChange = (event) => {\n    event.preventDefault()\n    setCurrentInterpretation(event.target.value)\n    if (event.target.value) {\n      setIsDisabled(false)\n    }\n  }\n\n  const handleEditChange = (event) => {\n    setEditedInterpretation(event.target.value)\n    if (event.target.value) {\n      setIsDisabled(false)\n    }\n  }\n\n  const handleSubmit = (event) => {\n    if (type === 'newInterpretation') {\n      handleSubmitInterpretation(event, currentInterpretation)\n      setCurrentInterpretation('')\n    } else if (type === 'editInterpretation') {\n      handleSubmitEditInterpretation(editedInterpretation)\n      setEditedInterpretation('')\n    }\n  }\n\n  return (\n   <div>\n      {type === 'newInterpretation' && (\n        <>\n          <input\n            type='text'\n            placeholder='Type your interpretation here...'\n            onChange={(event) => handleChange(event)}\n            value={currentInterpretation}\n          />\n          <button onClick={(event) => handleSubmit(event)}\n            className=\"submit-btn\" disabled={isDisabled}>\n              SUBMIT INTERPRETATION\n          </button>\n            <Link to='/my-interpretations' >\n              <button className='my-interpretations-btn' >\n                GO TO MY INTERPRETATIONS\n              </button>\n            </Link>\n        </>\n      )}\n      {type === 'editInterpretation' && (\n        <>\n          <input\n            type='text'\n            placeholder={editedInterpretation || \"Type your interpretation here...\"}\n            value={editedInterpretation}\n            onChange={(event) => handleEditChange(event)}\n          />\n          <div className='buttonContainer'>\n            <button onClick={() => handleSubmit()}\n            className=\"submit-btn\" disabled={isDisabled}>\n              Submit Intepretation\n            </button>\n            <Link to='/my-interpretations' >\n              <span><button className='my-interpretations-btn'>\n                GO TO MY INTERPRETATIONS\n              </button></span>\n            </Link>\n          </div>\n        </>\n      )}\n   </div>\n  )\n}\n\nexport default InterpretationInput;","  import React, {useEffect, useState} from 'react';\n  import {fetchQuoteByTheme, fetchQuoteByTitle} from '../../util.js'\n  import Quote from '../quote/Quote.js'\n  import './InterpretationIndex.css'\n  import {Link} from 'react-router-dom';\n  import Error from '../error/Error'\n  import InterpretationInput from '../interpretationInput/InterpretationInput'\n\n  const InterpretationIndex = ({addInterpretation, addQuote, isEditing, editInterpretation}) => {\n    const [quote, setQuote] = useState('')\n    const [error, setError] = useState(null)\n    const [disableFavoriteButton, setDisableFavoriteButton] = useState(false)\n    const [interpretationId, setInterpretationId] = useState(null)\n\n    const fetchThemeQuote = async (theme) => {\n      try {\n        const data = await fetchQuoteByTheme(theme)\n        setQuote({quote: data.quote.quote, id: data.quote.id})    \n      } catch (err) {\n        setError(\"no quote found\")\n      }\n    }\n\n    const fetchTitleQuote = async (title) => {\n      try {\n        const data = await fetchQuoteByTitle(title)\n        setQuote({quote: data.quote.quote, id: data.quote.id})\n      } catch (err) {\n        setError(\"no quote found\")\n      }\n    }\n\n    const findQuoteFromStorageById = () => {\n      const retrievedItems = JSON.parse(localStorage.getItem('interpretations'))\n      const paramIndex = window.location.href.split('/').indexOf('edit') + 1;\n      const quoteId = window.location.href.split('/')[paramIndex]\n      const newList = retrievedItems.filter(quote => parseInt(quote.id) === parseInt(quoteId));\n      if(!newList){\n        window.location.assign(\"/badpath\");\n      }\n      setQuote({quote:newList[0].quote})\n      setInterpretationId(newList[0].id)\n    }\n\n    const fetchByParam = () => {\n      if (isEditing) {\n        findQuoteFromStorageById()\n      }\n      if (!isEditing) {\n        if (window.location.href.includes('/category/title/')) {\n          const urlParams = window.location.href.split(\"/\")\n          const choiceIndex = (window.location.href.split(\"/\").indexOf('title')) + 1\n          const param = urlParams[choiceIndex]\n          fetchTitleQuote(param)   \n        } else if ( window.location.href.includes('/category/theme/') ) {\n          const urlParams = window.location.href.split(\"/\")\n          const choiceIndex = (window.location.href.split(\"/\").indexOf('theme')) + 1\n          const param = urlParams[choiceIndex]\n          fetchThemeQuote(param)\n        } \n      } \n    }\n\n\n    useEffect(() => {\n      fetchByParam() \n    }, [])\n\n    const fetchANewQuote = () => {\n      fetchByParam();\n      setDisableFavoriteButton(true)\n    }\n\n    const resetDisabledButton = () => {\n      setDisableFavoriteButton(false)\n    }\n \n    const handleSubmitInterpretation = (event, currentInterpretation) => {\n      addInterpretation(quote, currentInterpretation)\n    }\n \n    const handleSubmitEditInterpretation = (editedInterpretation) => {\n      editInterpretation(quote, editedInterpretation, interpretationId)\n    }\n\n    return (\n      <div className=\"InterpretationIndex\">\n        {!isEditing && (\n          <>\n        {error && <Error type={error}/>}\n        <div className=\"quote-container\">\n          <nav>\n            <button onClick={() => fetchANewQuote()}>\n              GET A NEW QUOTE\n            </button>\n            <Link to=\"/doth_translate/\">\n            <button>\n              CHOOSE A NEW CATEGORY\n            </button>\n            </Link>\n          </nav>\n          {quote && <Quote quote={quote} addQuote={addQuote} type='new' disableFavoriteButton={disableFavoriteButton} resetDisabledButton={resetDisabledButton}/>}\n        </div>\n        <InterpretationInput  handleSubmitInterpretation={handleSubmitInterpretation} type='newInterpretation' />\n        </>\n        )\n      }\n\n      { isEditing && (\n        <>\n          {error && <Error type={error}/>}\n          <div className=\"quote-container\">\n            <nav>\n              <Link to=\"/doth_translate/\">\n              <span><button className='arrow-transition-button'>\n                CHOOSE A NEW CATEGORY\n              </button></span>\n              </Link>\n            </nav>\n            {quote && <Quote quote={quote} type='edit'/>}\n          </div>\n          <InterpretationInput handleSubmitEditInterpretation={handleSubmitEditInterpretation} type='editInterpretation' />\n        </>\n        )\n        }\n     \n    </div>\n    )\n\n  }\n\n  export default InterpretationIndex;\n","export default __webpack_public_path__ + \"static/media/bin.a5de3858.png\";","export default __webpack_public_path__ + \"static/media/pencil.acdbed0d.png\";","import './Card.css';\nimport bin from '../../assets/bin.png';\nimport pencil from '../../assets/pencil.png'\nimport arrow from '../../assets/right-arrow.png'\nimport {\n  Link\n} from 'react-router-dom'\n\nconst Card = ({cardData, type, deleteQuote}) => {\n  let componentToRender;\n\n  if (type === 'favorites') {\n    componentToRender = (\n      <div className=\"favorites-container\" id={cardData.id} key={cardData.id}>\n        <p>{cardData.quote}</p>\n        <button onClick={() => deleteQuote(cardData.id)}>\n          <img src={bin} alt='trash bin' className=\"bin\"></img>\n        </button>\n        {/* <button>\n          <img src={arrow} alt=\"right arrow\" className=\"arrow\"></img>\n        </button> */}\n      </div>\n    )\n  } else if (type === 'submissions') {\n    componentToRender = ( \n      <div className=\"submissions\" >\n        <div><h3>Quote:</h3><p> {cardData.quote} </p></div>\n        <div>\n          <h3 className='interpretations-container'>Your Interpretation:</h3>\n          <p> {cardData.interpretation} </p>\n          <div>\n            <button>\n              <Link to={`edit/${cardData.id}`}>\n                <img src={pencil} alt='pencil' className=\"pencil\"></img>\n              </Link>\n            </button>\n          </div>\n        </div>\n      </div> \n    )\n  } else if (type === 'theme-options') {\n    componentToRender = ( \n      <div className=\"theme-options\" >\n        <button>{cardData}</button>\n      </div>\n    )\n  } else if (type === 'title-options') {\n    componentToRender = (\n      <div className=\"title-options\" >\n        <button>{cardData}</button>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"Card\">\n      {componentToRender}\n    </div>\n  )\n}\n\nexport default Card;","import {Link} from 'react-router-dom';\nimport './CardsContainer.css';\nimport Card from '../card/Card';\nimport uuid from 'react-uuid';\n\nconst CardsContainer = ({cards, type, deleteQuote}) => {\n   let cardComponents;\n   if (type === 'theme-options') {\n      cardComponents = cards.map(card =>\n         <div key={card}>\n            <Link to={`/category/theme/${card}`}>\n               <Card cardData={card} type={type}/>\n            </Link>\n         </div>\n      )\n   } else if (type === 'title-options') {\n      cardComponents = cards.map(card =>\n         <div key={card}>\n            <Link to={`/category/title/${card}`}>\n               <Card cardData={card} type={type}/>\n            </Link>\n         </div>\n      )\n   } else if (type === 'submissions' || type === 'favorites') {\n      cardComponents = cards.map(card => <Card cardData={card} type={type} deleteQuote={deleteQuote} key={uuid()} />)\n   }\n\n    return (\n      <div className='CardsContainer'>\n         {type === 'submissions' && (\n            <div className=\"interpretations\">\n               <h2 className='title'>My Interpretations</h2>\n               {cardComponents}\n               {!cardComponents.length && <button><Link to=\"/doth_translate/\">Go back to start interpreting</Link></button>}\n            </div>\n         )}   \n         {type === 'favorites' && (\n            <div className=\"favorites\">\n               <h2 className='title'>Saved Quotes</h2>\n               {cardComponents} \n               {!cardComponents.length && (\n               <button><Link to=\"/doth_translate/\">Find a favorite Quote</Link></button>)}\n            </div>\n         )}\n         {type === 'title-options' && (\n            <div className=\"titles\">\n               {cardComponents}\n            </div>\n         )}\n         {type === \"theme-options\" && (\n            <div className=\"themes\">\n               {cardComponents}\n            </div>\n         )}\n      </div>\n    )\n}\n\nexport default CardsContainer;","import CardsContainer from '../cardsContainer/CardsContainer';\nimport './InterpretationsSubmissionIndex.css'\n\nconst InterpretationSubmissionIndex = ({favorites, savedInterpretations, deleteQuote}) => {\n  return (\n    <div className=\"InterpretationSubmissionIndex\">\n      <CardsContainer cards={favorites} type='favorites' deleteQuote={deleteQuote} />\n      <CardsContainer cards={savedInterpretations} type='submissions'/>\n    </div>\n  )\n}\n\nexport default InterpretationSubmissionIndex;","import { Link } from 'react-router-dom';\nimport {useEffect} from 'react';\nimport {fetchAllTitles, fetchAllThemes} from '../../util.js';\nimport './DashboardIndex.css';\n\nconst DashboardIndex = () => {\n  const setCategoriesInLocalStorage = () => {\n    fetchAllTitles().then((data) => {\n      const titleOptions = JSON.stringify(data.quote);\n      localStorage.setItem('titles', titleOptions)\n      })\n    fetchAllThemes().then((data) => {\n      const themeOptions = JSON.stringify(data.quote);\n      localStorage.setItem('themes', themeOptions)\n      })\n  }\n\n  useEffect(() => {\n    setCategoriesInLocalStorage()\n  }, [])\n\n  return (\n    <div className=\"DashboardIndex\">\n      <h1>Let's Get Started!</h1>\n      <h2>I would like to choose a quote by...</h2>\n      <div className='button-container'>\n        <Link to='/category/theme'>\n          <button className=\"theme-btn\">THEME</button>\n        </Link>\n        <Link to='/category/title'>\n          <button className=\"title-btn\">PLAY</button>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default DashboardIndex;","export default __webpack_public_path__ + \"static/media/Loading.45fe4ef4.png\";","import {useEffect, useState} from 'react';\nimport {fetchAllTitles, fetchAllThemes} from '../../util.js';\nimport CardsContainer from '../cardsContainer/CardsContainer';\nimport loadingClock from '../../assets/Loading.png';\nimport Error from '../error/Error';\nimport './CategoryIndex.css';\n\nconst CategoryIndex = ({category}) => {\n  const [allTitles, setAllTitles] = useState([])\n  const [allThemes, setAllThemes] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n  const [error, setError] = useState(null)\n\n  const fetchTitles = async () => {\n    try {\n      const data = await fetchAllTitles()\n      setAllTitles(data.quote)\n    } catch (err) {\n      setError(\"no options found\")\n    }\n  }\n\n  const fetchThemes = async () => {\n    try {\n      const data = await fetchAllThemes()\n      setAllThemes(data.quote)\n    } catch (err) {\n      setError(\"no options found\")\n    }\n  }\n\n  useEffect(() => {\n    const fetchType = category.match.params.type\n    if (fetchType === 'theme' ) {\n      if (localStorage.themes) {\n        const retrievedThemes = JSON.parse(localStorage.getItem('themes'))\n        setAllThemes(retrievedThemes)\n        setIsLoading(false)\n      } else {\n        fetchThemes()\n        setIsLoading(false)\n      }\n    } else if (fetchType === 'title') {\n      if (localStorage.titles) {\n        const retrievedTitles = JSON.parse(localStorage.getItem('titles'))\n        setAllTitles(retrievedTitles)\n        setIsLoading(false)\n      } else {\n        fetchTitles()\n        setIsLoading(false)\n      }\n    }\n  }, [category.match.params.type])\n\n  return (\n    <div className=\"CategoryIndex\">\n      {error && <Error type={error}/>}\n      {isLoading && <> <p>Loading...</p><img src={loadingClock} alt=\"old clock \"></img></>}\n      {category.match.params.type === 'theme'  && <CardsContainer cards={allThemes} type=\"theme-options\"/> }\n      {category.match.params.type === 'title' && <CardsContainer cards={allTitles} type=\"title-options\"/> }\n    </div>\n  )\n}\n\nexport default CategoryIndex;","export default __webpack_public_path__ + \"static/media/shakespeare.23aff639.png\";","import './App.css';\nimport {\n  Route,\n  Switch,\n  Link,\n  Redirect\n} from 'react-router-dom';\nimport {\n  useState,\n  useEffect\n} from 'react';\nimport InterpretationIndex from '../interpretationIndex/InterpretationIndex.js';\nimport IntepretationsSubmisssionsIndex from '../intepretationSubmissionsIndex/IntepretationSubmissionsIndex';\nimport DashboardIndex from '../dashboardIndex/DashboardIndex'\nimport CategoryIndex from '../categoryIndex/CategoryIndex';\nimport shakespeareIcon from '../../assets/shakespeare.png';\nimport Error from '../error/Error';\n\nfunction App() {\n  const [savedInterpretations, setSavedInterpretations] = useState([])\n  const [favorites, setFavorites] = useState([])\n\n  const addInterpretation = (quote, newInterpretation) => {\n    const newInterpretationObj = {\n      quote: quote.quote,\n      interpretation: newInterpretation,\n      id: Date.now()\n    }\n    setSavedInterpretations([...savedInterpretations, newInterpretationObj])\n    const storageInterpretations = JSON.stringify([...savedInterpretations, newInterpretationObj]);\n    localStorage.setItem('interpretations', storageInterpretations)\n  }\n\n  const addQuote = (newFavorite, id) => {\n    if (favorites.includes(newFavorite)) {\n      return\n    }\n    const favoriteObj = {\n      quote: newFavorite,\n      id: id\n    }\n    setFavorites([...favorites, favoriteObj])\n    const storageFavorites = JSON.stringify([...favorites, favoriteObj]);\n    localStorage.setItem('favorites', storageFavorites)\n  }\n\n  const deleteQuote = (id) => {\n    const retrievedItems = JSON.parse(localStorage.getItem('favorites'))\n    const newList = retrievedItems.filter(quote => quote.id !== id);\n    const storageItems = JSON.stringify([...newList]);\n    localStorage.setItem('favorites', storageItems)\n    setFavorites(newList)\n  }\n\n  const checkLocalStorage = () => {\n    if (localStorage.favorites) {\n      const retrievedFavorites = JSON.parse(localStorage.getItem('favorites'))\n      setFavorites(retrievedFavorites)\n    }\n    if (localStorage.interpretations) {\n      const retrievedInterpretations = JSON.parse(localStorage.getItem('interpretations'))\n      setSavedInterpretations(retrievedInterpretations)\n    }\n  }\n\n  const editInterpretation = (quote, currentInterpretation, id) => {\n    const replacementInterpretationObj = {\n      quote: quote.quote,\n      interpretation: currentInterpretation,\n      id: id\n    }\n    const toSave = savedInterpretations.filter((interpretation) => {\n      return interpretation.id !== id\n    })\n    setSavedInterpretations([...toSave, replacementInterpretationObj])\n    const storageInterpretations = JSON.stringify([...toSave, replacementInterpretationObj]);\n    localStorage.setItem('interpretations', storageInterpretations)\n  }\n\n  useEffect(\n    () => {\n      checkLocalStorage()\n    }, [])\n  return (\n    <div className=\"App\">\n      <Link to=\"/doth_translate/\"><h1 className=\"logo\"> Doth Translate </h1></Link>\n      <Switch>\n        <Route\n          exact path = \"/doth_translate/\"\n          render={() => <DashboardIndex />}\n        />\n        <Route\n          exact path= \"/category/:type\"\n          render={(match) => <CategoryIndex category={match}/>}\n        />\n        <Route\n          exact path= \"/category/theme/:choice\"\n          render={(match) => <InterpretationIndex addInterpretation={addInterpretation} addQuote={addQuote} match={match} isEditing={false} />}\n        />\n        <Route\n          exact path= \"/category/title/:choice\"\n          render={(match) => <InterpretationIndex addInterpretation={addInterpretation} addQuote={addQuote} match={match} isEditing={false}/>}\n        />\n        <Route\n          exact path= \"/my-interpretations\"\n          render={() =><IntepretationsSubmisssionsIndex favorites={favorites} savedInterpretations={savedInterpretations} deleteQuote={deleteQuote}/>}\n        />\n        <Route\n          exact path= \"/edit/:id\"\n          render={(match) =><InterpretationIndex addInterpretation={addInterpretation} addQuote={addQuote} match={match} isEditing={true} editInterpretation={editInterpretation}/>}\n        />\n        <Route path='*' render={() => <Error type='404'/>} />\n        <Redirect to={\"/doth_translate/\"}/>\n      </Switch>\n      <nav className='back-to-main'> \n        <Link to=\"/doth_translate/\">\n          <img src={shakespeareIcon} alt=\"Shakespeare icon\" className=\"shakespeare\"></img>\n        </Link>\n        <div className='more-info'>\n          <p>Shakespearean Context Clues App: Grades 5-8</p>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App'\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}