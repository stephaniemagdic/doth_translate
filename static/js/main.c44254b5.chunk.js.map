{"version":3,"sources":["data/playQuotes.js","data/themeQuotes.js","util.js","components/word/Word.js","assets/add.png","components/quote/Quote.js","components/error/Error.js","components/interpretationInput/InterpretationInput.js","components/interpretationIndex/InterpretationIndex.js","assets/bin.png","assets/pencil.png","components/card/Card.js","components/cardsContainer/CardsContainer.js","components/intepretationSubmissionsIndex/IntepretationSubmissionsIndex.js","components/dashboardIndex/DashboardIndex.js","assets/Loading.png","data/categoryOptions.js","components/categoryIndex/CategoryIndex.js","assets/shakespeare.png","components/app/App.js","reportWebVitals.js","index.js"],"names":["playQuotes","themeQuotes","love","desire","strength","anger","rich","ambition","evil","violence","tyranny","guilt","conscience","witchcraft","courage","pain","friendship","fate","faith","vengeance","fetchDefinition","word","fetch","then","res","ok","json","console","log","catch","err","Word","useState","definition","setDefinition","getDefinition","a","data","meta","def","useEffect","length","className","id","Quote","quote","addQuote","type","disableFavoriteButton","resetDisabledButton","isDisabled","toggleIsDisabled","uuid","words","split","map","onClick","disabled","src","saveIcon","alt","Error","InterpretationInput","handleSubmitInterpretation","handleSubmitEditInterpretation","currentInterpretation","setCurrentInterpretation","setIsDisabled","editedInterpretation","setEditedInterpretation","retrievedItems","JSON","parse","localStorage","getItem","paramIndex","window","location","href","indexOf","quoteId","newList","filter","parseInt","interpretation","checkPlaceholder","handleSubmit","event","placeholder","onChange","preventDefault","target","value","handleChange","to","handleEditChange","InterpretationIndex","addInterpretation","isEditing","editInterpretation","setQuote","error","setDisableFavoriteButton","interpretationId","setInterpretationId","fetchThemeQuote","theme","Math","floor","random","fetchTitleQuote","title","fetchByParam","assign","findQuoteFromStorageById","includes","param","Card","componentToRender","cardData","deleteQuote","bin","pencil","CardsContainer","cardComponents","cards","card","InterpretationSubmissionIndex","favorites","savedInterpretations","DashboardIndex","themes","titles","CategoryIndex","category","allTitles","setAllTitles","allThemes","setAllThemes","isLoading","fetchTitles","fetchThemes","fetchType","match","params","retrievedThemes","retrievedTitles","loadingClock","App","setSavedInterpretations","setFavorites","newInterpretation","newInterpretationObj","Date","now","storageInterpretations","stringify","setItem","newFavorite","favoriteObj","storageFavorites","storageItems","replacementInterpretationObj","toSave","retrievedFavorites","interpretations","retrievedInterpretations","checkLocalStorage","exact","path","render","shakespeareIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c44254b5.chunk.js","sourcesContent":["export const titles = ['henry vi', 'henry iv', 'much ado about nothing', 'alls well that ends well', 'as-you-like-it', 'the comedy of errors', 'henry v', 'hamlet', 'julius cesar', 'love labors lost', 'macbeth', 'measure for measure', 'a midsummer night\\'s dream', 'the merchant of venice', 'othello', 'romeo and juliet', 'the temptest', 'twelfth night', 'the two noble kinsmen', 'the merry wives of windsor', 'antony and cleopatra', 'king lear', 'the taming of the shrew', 'the winter\\'s tale' ]\n\nexport const playQuotes = {\n  'henry-vi': ['Hung be the heavens with black, yield day to night!', 'Expect Saint Martin\\'s summer, halcyon days.', 'Unbidden guests Are often welcomest when they are gone.', 'But in these nice sharp quillets of the law, Good faith, I am no wiser than a daw.'],\n  'henry-iv': ['So shaken as we are, so wan with care.', 'What, in thy quips and thy quiddities?', ' Shall there be gallows standing in England when thou art king, and resolution thus fobbed as it is with the rusty curb of old father antick, the law?', 'Thou hast the most unsavoury similes.'],\n  'much-ado-about-nothing': ['He hath indeed better bettered expectation', 'I see, lady, the gentleman in not in your books', 'Friendship is constant in all other things', 'For beauty is a witch Against whose charms faith melteth into blood.', 'Silence is the perfectest herald of joy; I were but little happy, if I could say how much.', 'She speaks poniards, and every word stabs'],\n  'alls-well-that-ends-well': ['I know a man that had this trick of melancholy sold a goodly manor for a song.', 'No legacy is so rich as honesty.', '\\'T were all one / That I should love a bright particular star / And think to wed it, he is so above me'],\n  'as-you-like-it': ['Let us sit and mock the good housewife Fortune from her wheel, that her gifts may henceforth be bestowed equally.', 'Fortune reigns in gifts of the world.', 'Always the dullness of the fool is the whetstone of the wits.', 'How now, wit! whither wander you?'], \n  'the-comedy-of-errors': [' The pleasing punishment that women bear.', 'I to the world am like a drop of water That in the ocean seeks another drop, Who, falling there to find his fellow forth, Unseen, inquisitive, confounds himself.', 'A wretched soul bruised with adversity, We bid be quiet when we hear it cry; But were we burdened with like weight of pain, As much, or more, we should ourselves complain.', 'Every why hath a wherefore.'], \n  'henry-v': ['Would I were with him, wheresome\\'er he is, either in heaven or in hell.', 'Even at the turning o\\' the tide.', 'His nose was as sharp as a pen, and a\\' babbled of green fields.', 'Consideration, like an angel, came And whipped the offending Adam out of him.'\n  ], \n  'hamlet': ['In the most high and palmy state of Rome, A little ere the mightiest Julius fell, The graves stood tenantless and the sheeted dead Did squeak and gibber in the Roman streets.', ' And then it started like a guilty thing Upon a fearful summons', 'A little more than kin, and less than kind.', 'All that live must die, Passing through nature to eternity'],\n  \n  'julius-cesar': ['You blocks, you stones, you worse than senseless things! O you hard hearts, you cruel men of Rome, Knew you not Pompey?', 'Beware the ides of March.', 'I am not gamesome: I do lack some part Of that quick spirit that is in Antony.', 'Poor Brutus, with himself at war, Forgets the shows of love to other men', 'Set honour in one eye and death i\\' the other, And I will look on both indifferently.'], \n  'love-labors-lost': ['Our court shall be a little Academe, Still and contemplative in living art.', ' These are barren tasks, too hard to keep, Not to see ladies, study, fast, not sleep!', 'Painfully to pore upon a book To seek the light of truth; while truth the while Doth falsely blind the eyesight of his look.'\n    ], \n  'macbeth': [ 'Two truths are told As happy prologues to the swelling act Of the imperial theme Now o\\'er the one half-world Nature seems dead.', 'O horror, horror, horror! / Tongue nor heart cannot conceive nor name thee'], \n  'measure-for-measure': ['Our doubts are traitors, And make us lose the good we oft might win By fearing to attempt.', 'Condemn the fault and not the actor of it? '], \n  'a-midsummer-night\\'s-dream':['The lunatic, the lover, and the poet, are of imagination all compact.', 'I have had a most rare vision. I have had a dream, past the wit of man to say what dream it was', 'Oh why rebuke you him that loves you so? / Lay breath so bitter on your bitter foe.' ], \n  'the-merchant-of -enice': ['Love is blind, and lovers cannot see The pretty follies that themselves commit.', 'With bated breath and whispering humbleness', 'Let it serve for table-talk.'], \n  'othello': ['O, beware, my lord, of jealousy! It is the green-eyed monster which doth mock The meat it feeds on.', 'Reputation, reputation, reputation! Oh, I have lost my reputation! I have lost the immortal part of myself, and what remains is bestial.'], \n  'romeo-and-juliet': ['A plague o\\' both your houses! They have made worms\\' meat of me!', 'This bud of love, by summer\\'s ripening breath,May prove a beauteous flower when next we meet.'], \n  'the-temptest': ['Misery acquaints a man with strange bedfellows!', 'I find my zenith doth depend upon A most auspicious star.' ],\n  'twelfth-night': ['If music be the food of love, play on; Give me excess of it.', 'There is no darkness but ignorance.'], \n  'the-two-noble-kinsmen': ['Come all sad and solemn shows, That are quick-eyed Pleasure\\'s foes: We convent naught else but woes. We convent naught else but woes.', 'How modestly she blows and paints the sun With her chaste blushes. '], \n  'the-merry-wives-of-windsor': ['I think the devil will not have me damned, lest the oil that\\'s in me should set hell on fire.', 'Thou art the Mars of malcontents.', 'In love the heavens themselves do guide the state. Money buys lands, and wives are sold by fate. '], \n  'antony-and-cleopatra': ['Celerity is never more admired Than by the negligent.', 'I found you as a morsel cold upon Dead Caesar\\'s trencher.', 'Egypt, thou knew’st too well My heart was to thy rudder tied by th’strings And thou shouldst tow me after'], \n  'king-lear': ['You blocks, you stones, you worse than senseless things! O you hard hearts, you cruel men of Rome, Knew you not Pompey', 'O conspiracy! Sham\\'st thou to show thy dangerous brow by night, When evils are most free?', 'As he was valiant, I honour him: but, as he was ambitious, I slew him.'], \n  'the-taming-of-the-shrew': ['An eye-sore to our solemn festival!', 'And do as adversaries do in law, Strive mightily, but eat and drink as friends.', 'A woman moved is like a fountain troubled, Muddy, ill-seeming, thick, bereft of beauty.'], \n  'the-winter\\'s-tale': ['I speak as my understanding instructs me and as mine honesty puts it to utterance.', 'Be plainer with me. Let me know my trespass By its own visage; if I then deny it, \\'Tis none of mine.'] \n\n}","export const themes = ['desire', 'love', 'strength', 'rich', 'anger', 'ambition', 'evil', 'violence', 'tyranny', 'guilt', 'conscience', 'witchcraft', 'courage', 'pain', 'friendship', 'fate', 'faith', 'vengeance' ]\n\nexport const themeQuotes = { \n  love: ['The sight of lovers feedeth those in love', 'There’s beggary in the love that can be reckoned', 'Shall I compare thee to a summer\\'s day? Thou art more lovely and more temperate'], \ndesire: ['So lust, thought to a radiant angel link\\'d, Will sate itself in a celestial bed And prey on garbage.', 'This momentary joy breeds months of pain; This hot desire converts to cold disdain.', 'I know a lady in Venice would have walked barefoot to Palestine for a touch of his nether lip','Sometime all full with feasting on your sight And by and by clean starved for a look.'], strength: ['He who has injured thee was either stronger or weaker than thee. If weaker, spare him; if stronger, spare thyself.', 'Robust grass endures mighty winds; loyal ministers emerge through ordeal'], \nanger: ['Come not between the dragon and his wrath.', 'Let grief Convert to anger; blunt not the heart, enrage it. There is no following her in this fierce vein.', 'The cannons have their bowels full of wrath, And ready mounted are they to spit forth, Their iron indignation \\'gainst your walls'],\n rich: ['So distribution should undo excess, and each man have enough.', 'If thou wilt lend this money…lend it rather to thine enemy, who, if he break, thou mayst with better face exact the penalty.', 'He lends out money gratis and brings down the rate of usance here with us in Venice.', 'For thy sweet love remember\\'d such wealth brings. That then I scorn to change my state with kings.'], ambition: ['But \\'tis common proof, that lowliness is young ambition\\'s ladder, whereto the climber-upward turns his face; but when he once attains the upmost round, he then turns his back, looks in the clouds, scorning the vase defrees by which he did ascend.', 'Farewell the tranquil mind! farewell content! Farewell the plumed troops, and the big wars, That make ambition virtue.'], evil: ['The devil can cite Scripture for his purpose. An evil soul producing holy witness Is like a villain with a smiling cheek, A goodly apple rotten at the heart. O, what a goodly outside falsehood hath!', 'In law, what plea so tainted and corrupts, but being seasoned with a gracious voice obscures the show of evil.'], violence: ['Ay, but to die and go we know not where; To lie in cold obstrution and to rot; This sensible warm motion to become A kneaded clod; and the delighted spirit To bathe in fiery floods or to reside In thrilling regions of thick-ribbed ice; To be imprison\\'d in the viewless winds, And blown with restless violence round about The pendant world.', 'The violence of either grief or joy, their own enactures with themselves destroy.'], tyranny: ['Boundless intemperance In nature is a tyranny. It hath been Th\\' untimely emptying of the happy throne And fall of many kings.', 'I begin to find an idle and fond bondage in the oppression of aged tyranny, who sways, not as it hath power, but as it is suffered.'], guilt: ['Suspicion always haunts the guilty mind.', 'A wicked conscience mouldeth goblins swift as frenzy thoughts.', 'They whose guilt within their bosom lies, imagine every eye beholds their blame.'], conscience: ['I feel within me a peace above all earthly dignities, a still and quiet conscience.', 'O coward conscience, how dost thou afflict me!', 'Men must learn now with pity to dispense; For policy sits above conscience.'], witchcraft: ['Ay, that incestuous, that adulterate beast, With witchcraft of his wit, with traitorous gifts- O wicked wit and gifts, that have the power So to seduce!', 'You have witchcraft in your lips, there is more eloquence in a sugar touch of them than in the tongues of the French council; and they should sooner persuade Harry of England than a general petition of monarchs.'], courage: ['Cowards die many times before their deaths; the valiant never taste of death but once.', 'Who could refrain that had a heart to love and in that heart courage to make love known?', 'He hath borne himself beyond the promise of his age, doing, in the figure of a lamb, the feats of a lion.'], pain: ['Thine eyes I love, and they as pitying me, Knowing thy heart torment me with disdain, Have put on black, and loving mourners be, Looking with pretty ruth upon my pain.', 'one pain is cured by another. catch some new infection in your eye and the poison of the old one would die.', 'Be wise as thou art cruel, do not press My tongue-tied patience with too much disdain: Lest sorrow lend me words and words express, The manner of my pity-wanting pain.'], friendship: ['The band that seems to tie their friendship together will be the very strangler of their amity','That which I would discover / The law of friendship bids me to conceal', 'To set a gloss on faint deeds, hollow welcomes, Recanting goodness, sorry ere \\’tis shown; But where there is true friendship, there needs none.'], fate: ['He shall spurn fate, scorn death, and bear His hopes \\'bove wisdom, grace and fear: And you all know, security Is mortals\\' chiefest enemy.', 'Our wills and fates do so contrary run, That our devices still are overthrown; Our thoughts are ours, their ends none of our own.'], faith: ['Ignorance is the curse of God; knowledge is the wing wherewith we fly to heaven', 'Now, God be praised, that to believing souls /Gives light in darkness, comfort in despair', 'Tis mad idolatry/ To make the service greater than the god '], vengeance: ['How all occasions do inform against me, And spur my dull revenge!','As for the brat of this accursed duke, Whose father slew my father, he shall die.']\n}\n\n\n\n","export const fetchAllTitles = () => {\n  return fetch('https://shakespeare-quotes-generator.herokuapp.com/api/v1/quotes/play-titles').then((res) => res.ok ? res.json() : console.log(\"something went wrong\")).catch(err => err)\n}\n\nexport const fetchAllThemes = () => {\n  return fetch('https://shakespeare-quotes-generator.herokuapp.com/api/v1/quotes/themes').then((res) => res.ok ? res.json() : console.log(\"something went wrong\")).catch(err => err)\n}\n\nexport const fetchDefinition = (word) => {\n  return fetch(`https://dictionaryapi.com/api/v3/references/learners/json/${word}?key=c80e6519-7311-4235-9297-4ba6a1b27611`).then(res => res.ok ? res.json() : console.log(\"something went wrong\")).catch(err => err)\n}\n\nexport const fetchQuoteByTitle = (title) => {\n  return fetch(`https://shakespeare-quotes-generator.herokuapp.com/api/v1/quotes/by-play/${title}`).then((res) => res.ok ? res.json() : console.log(\"something went wrong, res:\", res)).catch(err => err)\n}\n\nexport const fetchQuoteByTheme = (theme) => {\n  return fetch(`https://shakespeare-quotes-generator.herokuapp.com/api/v1/quotes/by-theme/${theme}`).then((res) => res.ok ? res.json() : console.log(\"something went wrong, res:\", res)).catch(err => err)\n}\n","import {useState, useEffect} from 'react';\nimport {fetchDefinition} from '../../util.js'\nimport ReactTooltip from 'react-tooltip';\nimport './Word.css'\n\nconst Word = ({word}) => {\n  const [definition, setDefinition] = useState('')\n\n  const getDefinition = async () => {\n    try {\n      const data = await fetchDefinition(word)\n      setDefinition(data[0].meta['app-shortdef'].def[0])\n    } catch (err) {\n      return\n    }\n  }\n\n  useEffect(() => {  \n    if (word.length >= 5 ) {\n      getDefinition();\n    } \n  }, [])\n\n  return (\n    <div className=\"Word\" key={word}>\n      {word.length >= 5 && definition && (\n         <>\n         <p data-tip data-for={word} className='definition'> <span className=\"defined word\">{word}</span></p>\n        <ReactTooltip id={word}>\n          <span>{definition}</span>\n        </ReactTooltip>\n        </>\n      )}\n      {word.length < 5 && <span className=\"word\">{word}</span>}\n      {word.length >=5 && !definition && <span className=\"word\">{word}</span>}\n    </div>\n  )\n}\n\nexport default Word;\n\n","export default __webpack_public_path__ + \"static/media/add.31409190.png\";","import {useState, useEffect} from 'react';\nimport Word from '../word/Word.js';\nimport './Quote.css';\nimport saveIcon from '../../assets/add.png';\nimport uuid from 'react-uuid';\n\nconst Quote = ({quote, addQuote, type, disableFavoriteButton, resetDisabledButton}) => {\n  const [isDisabled, toggleIsDisabled] = useState(false);\n  const id = uuid();\n  const words = quote.quote.split(\" \").map(word => <Word word={word} id={word} key={uuid()}/> );\n\n  useEffect(() => {\n    if (disableFavoriteButton) {\n      toggleIsDisabled(false)\n    }\n    if (type === 'new'){\n      resetDisabledButton()\n    }\n  }, [disableFavoriteButton, type, resetDisabledButton])\n\n  const handleClick = () => {\n    addQuote(quote.quote, id)\n    toggleIsDisabled(true)\n  }\n \n  return (\n    <>\n      {type === 'new' && (\n        <div className=\"Quote\" id={id} key={id}>\n          <div className=\"words-container\">\n            {words}\n          </div>\n          <button onClick={() => handleClick()} className=\"favorite-btn\" disabled={isDisabled}>\n            <img src={saveIcon} alt='plus sign' className='saveIcon'></img>\n          </button>\n        </div>\n      )}\n        {type === 'edit' && (\n        <div className=\"Quote\" id={id} key={id}>\n          <div className=\"words-container\">\n            {words}\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default Quote;\n","import './Error.css'\n\nconst Error = ({type}) => {\n  let quote;\n  if (type === '404') {\n    quote = (\n      <div className='error-quote'>\n        <span>To be, or not to be, that is the question: </span>\n        <span>Whether 'tis nobler in the mind to suffer</span>\n        <span> The slings and arrows of outrageous fortune,</span>\n        <span>Or to take arms against a sea of troubles </span>\n        <span> And by opposing end them. </span> \n        <span> To die—to sleep, No more </span>\n        <h2>Page Not Found</h2>\n      </div>\n    )\n  } else if (type > 400 || type === \"no quote found\" || \"no options found\") {\n    quote = (\n      <div className='error-quote'>\n        <span> Oh, conspiracy, are you ashamed to show your face even at night, </span>\n        <span> when evil things are most free? If so, when it's day, </span>\n        <span>where are you going to find a cave dark enough to hide your monstrous face? </span>\n        <span>-Julius Caesar: Act 2 Scene 1 Page 4</span>\n        <h2>Internal Server Error.</h2>\n    </div>\n    )\n  } \n\n  return (\n    <div className='Error'>\n      <p>{quote}</p>\n    </div>\n  )\n}\n\nexport default Error;","import {\n  useState,\n  useEffect\n} from 'react';\nimport {\n  Link\n} from 'react-router-dom'\n\nconst InterpretationInput = ({\n  handleSubmitInterpretation,\n  handleSubmitEditInterpretation,\n  type\n}) => {\n  const [currentInterpretation, setCurrentInterpretation] = useState('')\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [editedInterpretation, setEditedInterpretation] = useState(\"Type your interpretation here...\")\n\n  useEffect(() => {\n    const checkPlaceholder = () => {\n      const retrievedItems = JSON.parse(localStorage.getItem('interpretations'))\n      const paramIndex = window.location.href.split('/').indexOf('edit') + 1;\n      const quoteId = window.location.href.split('/')[paramIndex]\n      const newList = retrievedItems.filter(quote => parseInt(quote.id) === parseInt(quoteId));\n      setEditedInterpretation(newList[0].interpretation)\n    }\n    if (type === 'editInterpretation') {\n      checkPlaceholder()\n    }\n  }, [type])\n\n  const handleChange = (event) => {\n    event.preventDefault()\n    setCurrentInterpretation(event.target.value)\n    if (event.target.value) {\n      setIsDisabled(false)\n    }\n  }\n\n  const handleEditChange = (event) => {\n    setEditedInterpretation(event.target.value)\n    if (event.target.value) {\n      setIsDisabled(false)\n    }\n  }\n\n  const handleSubmit = (event) => {\n    if (type === 'newInterpretation') {\n      handleSubmitInterpretation(event, currentInterpretation)\n      setCurrentInterpretation('')\n    } else if (type === 'editInterpretation') {\n      handleSubmitEditInterpretation(editedInterpretation)\n      setEditedInterpretation('')\n    }\n  }\n\n  return (\n   <div>\n      {type === 'newInterpretation' && (\n        <>\n          <input\n            type='text'\n            placeholder='Type your interpretation here...'\n            onChange={(event) => handleChange(event)}\n            value={currentInterpretation}\n          />\n          <button onClick={(event) => handleSubmit(event)}\n            className=\"submit-btn\" disabled={isDisabled}>\n              SUBMIT INTERPRETATION\n          </button>\n            <Link to='/my-interpretations' >\n              <button className='my-interpretations-btn' >\n                GO TO MY INTERPRETATIONS\n              </button>\n            </Link>\n        </>\n      )}\n      {type === 'editInterpretation' && (\n        <>\n          <input\n            type='text'\n            placeholder={editedInterpretation || \"Type your interpretation here...\"}\n            value={editedInterpretation}\n            onChange={(event) => handleEditChange(event)}\n          />\n          <div className='buttonContainer'>\n            <button onClick={() => handleSubmit()}\n            className=\"submit-btn\" disabled={isDisabled}>\n              Submit Intepretation\n            </button>\n            <Link to='/my-interpretations' >\n              <span><button className='my-interpretations-btn'>\n                GO TO MY INTERPRETATIONS\n              </button></span>\n            </Link>\n          </div>\n        </>\n      )}\n   </div>\n  )\n}\n\nexport default InterpretationInput;","  import React, {useEffect, useState} from 'react';\n  // import {fetchQuoteByTheme, fetchQuoteByTitle} from '../../util.js'\n  import {playQuotes} from '../../data/playQuotes';\n  import {themeQuotes} from '../../data/themeQuotes';\n  import Quote from '../quote/Quote.js'\n  import './InterpretationIndex.css'\n  import {Link} from 'react-router-dom';\n  import Error from '../error/Error'\n  import InterpretationInput from '../interpretationInput/InterpretationInput'\n  import uuid from 'react-uuid';\n\n  const InterpretationIndex = ({addInterpretation, addQuote, isEditing, editInterpretation}) => {\n\n    const [quote, setQuote] = useState('')\n    const [error, setError] = useState(null)\n    const [disableFavoriteButton, setDisableFavoriteButton] = useState(false)\n    const [interpretationId, setInterpretationId] = useState(null)\n\n    const fetchThemeQuote = async (theme) => {\n      // try {\n      //   const data = await fetchQuoteByTheme(theme)\n      //   setQuote({quote: data.quote.quote, id: data.quote.id})    \n      // } catch (err) {\n      //   setError(\"no quote found\")\n      // }\n      setQuote({quote: themeQuotes[theme][Math.floor(Math.random()*themeQuotes[theme].length)], id: uuid()})\n    }\n\n\n    const fetchTitleQuote = async (title) => {\n      // try {\n      //   const data = await fetchQuoteByTitle(title)\n      //   setQuote({quote: data.quote.quote, id: data.quote.id})\n      // } catch (err) {\n      //   setError(\"no quote found\")\n      // }\n      console.log(\"title from url\", title)\n      setQuote({quote: playQuotes[title][[Math.floor(Math.random()*playQuotes[title].length)]], id: uuid()})\n    }\n\n    const findQuoteFromStorageById = () => {\n      const retrievedItems = JSON.parse(localStorage.getItem('interpretations'))\n      const paramIndex = window.location.href.split('/').indexOf('edit') + 1;\n      const quoteId = window.location.href.split('/')[paramIndex]\n      const newList = retrievedItems.filter(quote => parseInt(quote.id) === parseInt(quoteId));\n      if(!newList){\n        window.location.assign(\"/badpath\");\n      }\n      setQuote({quote:newList[0].quote})\n      setInterpretationId(newList[0].id)\n    }\n\n    const fetchByParam = () => {\n      if (isEditing) {\n        findQuoteFromStorageById()\n      }\n      if (!isEditing) {\n        if (window.location.href.includes('/category/title/')) {\n          const urlParams = window.location.href.split(\"/\")\n          const choiceIndex = (window.location.href.split(\"/\").indexOf('title')) + 1\n          const param = urlParams[choiceIndex]\n          fetchTitleQuote(param)   \n        } else if ( window.location.href.includes('/category/theme/') ) {\n          const urlParams = window.location.href.split(\"/\")\n          const choiceIndex = (window.location.href.split(\"/\").indexOf('theme')) + 1\n          const param = urlParams[choiceIndex]\n          fetchThemeQuote(param)\n        } \n      } \n    }\n\n\n    useEffect(() => {\n      fetchByParam() \n    }, [])\n\n    const fetchANewQuote = () => {\n      fetchByParam();\n      setDisableFavoriteButton(true)\n    }\n\n    const resetDisabledButton = () => {\n      setDisableFavoriteButton(false)\n    }\n \n    const handleSubmitInterpretation = (event, currentInterpretation) => {\n      addInterpretation(quote, currentInterpretation)\n    }\n \n    const handleSubmitEditInterpretation = (editedInterpretation) => {\n      editInterpretation(quote, editedInterpretation, interpretationId)\n    }\n\n    return (\n      <div className=\"InterpretationIndex\">\n        {!isEditing && (\n          <>\n        {error && <Error type={error}/>}\n        <div className=\"quote-container\">\n          <nav>\n            <button onClick={() => fetchANewQuote()}>\n              GET A NEW QUOTE\n            </button>\n            <Link to=\"/\">\n            <button>\n              CHOOSE A NEW CATEGORY\n            </button>\n            </Link>\n          </nav>\n          {quote && <Quote quote={quote} addQuote={addQuote} type='new' disableFavoriteButton={disableFavoriteButton} resetDisabledButton={resetDisabledButton}/>}\n        </div>\n        <InterpretationInput  handleSubmitInterpretation={handleSubmitInterpretation} type='newInterpretation' />\n        </>\n        )\n      }\n\n      { isEditing && (\n        <>\n          {error && <Error type={error}/>}\n          <div className=\"quote-container\">\n            <nav>\n              <Link to=\"/doth_translate/\">\n              <span><button className='arrow-transition-button'>\n                CHOOSE A NEW CATEGORY\n              </button></span>\n              </Link>\n            </nav>\n            {quote && <Quote quote={quote} type='edit'/>}\n          </div>\n          <InterpretationInput handleSubmitEditInterpretation={handleSubmitEditInterpretation} type='editInterpretation' />\n        </>\n        )\n        }\n     \n    </div>\n    )\n\n  }\n\n  export default InterpretationIndex;\n","export default __webpack_public_path__ + \"static/media/bin.a5de3858.png\";","export default __webpack_public_path__ + \"static/media/pencil.acdbed0d.png\";","import './Card.css';\nimport bin from '../../assets/bin.png';\nimport pencil from '../../assets/pencil.png'\nimport arrow from '../../assets/right-arrow.png'\nimport {\n  Link\n} from 'react-router-dom'\n\nconst Card = ({cardData, type, deleteQuote}) => {\n  let componentToRender;\n\n  if (type === 'favorites') {\n    componentToRender = (\n      <div className=\"favorites-container\" id={cardData.id} key={cardData.id}>\n        <p>{cardData.quote}</p>\n        <button onClick={() => deleteQuote(cardData.id)}>\n          <img src={bin} alt='trash bin' className=\"bin\"></img>\n        </button>\n        {/* <button>\n          <img src={arrow} alt=\"right arrow\" className=\"arrow\"></img>\n        </button> */}\n      </div>\n    )\n  } else if (type === 'submissions') {\n    componentToRender = ( \n      <div className=\"submissions\" >\n        <div><h3>Quote:</h3><p> {cardData.quote} </p></div>\n        <div>\n          <h3 className='interpretations-container'>Your Interpretation:</h3>\n          <p> {cardData.interpretation} </p>\n          <div>\n            <button>\n              <Link to={`edit/${cardData.id}`}>\n                <img src={pencil} alt='pencil' className=\"pencil\"></img>\n              </Link>\n            </button>\n          </div>\n        </div>\n      </div> \n    )\n  } else if (type === 'theme-options') {\n    componentToRender = ( \n      <div className=\"theme-options\" >\n        <button>{cardData}</button>\n      </div>\n    )\n  } else if (type === 'title-options') {\n    componentToRender = (\n      <div className=\"title-options\" >\n        <button>{cardData}</button>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"Card\">\n      {componentToRender}\n    </div>\n  )\n}\n\nexport default Card;","import {Link} from 'react-router-dom';\nimport './CardsContainer.css';\nimport Card from '../card/Card';\nimport uuid from 'react-uuid';\n\nconst CardsContainer = ({cards, type, deleteQuote}) => {\n   let cardComponents;\n   if (type === 'theme-options') {\n      cardComponents = cards.map(card =>\n         <div key={card}>\n            <Link to={`/category/theme/${card}`}>\n               <Card cardData={card} type={type}/>\n            </Link>\n         </div>\n      )\n   } else if (type === 'title-options') {\n      cardComponents = cards.map(card =>\n         <div key={card}>\n            <Link to={`/category/title/${card}`}>\n               <Card cardData={card} type={type}/>\n            </Link>\n         </div>\n      )\n   } else if (type === 'submissions' || type === 'favorites') {\n      cardComponents = cards.map(card => <Card cardData={card} type={type} deleteQuote={deleteQuote} key={uuid()} />)\n   }\n\n    return (\n      <div className='CardsContainer'>\n         {type === 'submissions' && (\n            <div className=\"interpretations\">\n               <h2 className='title'>My Interpretations</h2>\n               {cardComponents}\n               {!cardComponents.length && <button><Link to=\"/\">Go back to start interpreting</Link></button>}\n            </div>\n         )}   \n         {type === 'favorites' && (\n            <div className=\"favorites\">\n               <h2 className='title'>Saved Quotes</h2>\n               {cardComponents} \n               {!cardComponents.length && (\n               <button><Link to=\"/\">Find a favorite Quote</Link></button>)}\n            </div>\n         )}\n         {type === 'title-options' && (\n            <div className=\"titles\">\n               {cardComponents}\n            </div>\n         )}\n         {type === \"theme-options\" && (\n            <div className=\"themes\">\n               {cardComponents}\n            </div>\n         )}\n      </div>\n    )\n}\n\nexport default CardsContainer;","import CardsContainer from '../cardsContainer/CardsContainer';\nimport './InterpretationsSubmissionIndex.css'\n\nconst InterpretationSubmissionIndex = ({favorites, savedInterpretations, deleteQuote}) => {\n  return (\n    <div className=\"InterpretationSubmissionIndex\">\n      <CardsContainer cards={favorites} type='favorites' deleteQuote={deleteQuote} />\n      <CardsContainer cards={savedInterpretations} type='submissions'/>\n    </div>\n  )\n}\n\nexport default InterpretationSubmissionIndex;","import { Link } from 'react-router-dom';\nimport {useEffect} from 'react';\nimport './DashboardIndex.css'\n// import {fetchAllTitles, fetchAllThemes} from '../../util.js';\n\n\n\nconst DashboardIndex = () => {\n  const setCategoriesInLocalStorage = () => {\n    // fetchAllTitles().then((data) => {\n    //   const titleOptions = JSON.stringify(data.quote);\n    //   localStorage.setItem('titles', titleOptions)\n    //   })\n    // fetchAllThemes().then((data) => {\n    //   const themeOptions = JSON.stringify(data.quote);\n    //   localStorage.setItem('themes', themeOptions)\n    //   })\n  }\n\n  useEffect(() => {\n    // setCategoriesInLocalStorage()\n  }, [])\n\n  return (\n    <div className=\"DashboardIndex\">\n      <h1>Let's Get Started!</h1>\n      <h2>I would like to choose a quote by...</h2>\n      <div className='button-container'>\n        <Link to='/category/theme'>\n          <button className=\"theme-btn\">THEME</button>\n        </Link>\n        <Link to='/category/title'>\n          <button className=\"title-btn\">PLAY</button>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default DashboardIndex;","export default __webpack_public_path__ + \"static/media/Loading.45fe4ef4.png\";","export const themes = ['desire', 'love', 'strength', 'rich', 'ambition', 'evil', 'violence', 'tyranny', 'guilt', 'conscience', 'witchcraft', 'courage', 'pain', 'friendship', 'fate', 'faith', 'vengeance' ]\n\nexport const titles = ['henry-vi', 'henry-iv', 'much-ado-about-nothing', 'alls- well-that-ends-well', 'as-you-like-it', 'the-comedy-of-errors', 'henry-v', 'hamlet', 'julius-cesar', 'love-labors-lost', 'macbeth', 'measure-for-measure', 'a-midsummer-night\\'s-dream', 'the-merchant-of-venice', 'othello', 'romeo-and juliet', 'the-temptest', 'twelfth-night', 'the-two-noble-kinsmen', 'the-merry-wives-of-windsor', 'antony-and-cleopatra', 'king-lear', 'the-taming-of-the-shrew', 'the-winter\\'s-tale' ]","import {useEffect, useState} from 'react';\nimport {fetchAllTitles, fetchAllThemes} from '../../util.js';\nimport CardsContainer from '../cardsContainer/CardsContainer';\nimport loadingClock from '../../assets/Loading.png';\nimport Error from '../error/Error';\nimport './CategoryIndex.css';\nimport {themes, titles} from '../../data/categoryOptions';\n\nconst CategoryIndex = ({category}) => {\n  const [allTitles, setAllTitles] = useState([])\n  const [allThemes, setAllThemes] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n  // const [error, setError] = useState(null)\n  \n\n  const fetchTitles = async () => {\n    // try {\n    //   const data = await fetchAllTitles()\n    //   setAllTitles(data.quote)\n    // } catch (err) {\n    //   setError(\"no options found\")\n    // }\n    setAllTitles(titles)\n  }\n\n  const fetchThemes = async () => {\n    // try {\n    //   const data = await fetchAllThemes()\n    //   setAllThemes(data.quote)\n    // } catch (err) {\n    //   setError(\"no options found\")\n    // }\n    setAllThemes(themes)\n  }\n\n  useEffect(() => {\n    const fetchType = category.match.params.type\n    if (fetchType === 'theme' ) {\n      if (localStorage.themes) {\n        const retrievedThemes = JSON.parse(localStorage.getItem('themes'))\n        setAllThemes(retrievedThemes)\n        // setIsLoading(false)\n      } else {\n        fetchThemes()\n      //   setIsLoading(false)\n      }\n    } else if (fetchType === 'title') {\n      if (localStorage.titles) {\n        const retrievedTitles = JSON.parse(localStorage.getItem('titles'))\n        setAllTitles(retrievedTitles)\n        // setIsLoading(false)\n      } else {\n        fetchTitles()\n        // setIsLoading(false)\n      }\n    }\n  }, [category.match.params.type])\n\n  return (\n    <div className=\"CategoryIndex\">\n      {/* {error && <Error type={error}/>} */}\n      {isLoading && <> <p>Loading...</p><img src={loadingClock} alt=\"old clock \"></img></>}\n      {category.match.params.type === 'theme'  && <CardsContainer cards={allThemes} type=\"theme-options\"/> }\n      {category.match.params.type === 'title' && <CardsContainer cards={allTitles} type=\"title-options\"/> }\n    </div>\n  )\n}\n\nexport default CategoryIndex;","export default __webpack_public_path__ + \"static/media/shakespeare.23aff639.png\";","import './App.css';\nimport {\n  Route,\n  Switch,\n  Link\n} from 'react-router-dom';\nimport {\n  useState,\n  useEffect\n} from 'react';\nimport InterpretationIndex from '../interpretationIndex/InterpretationIndex.js';\nimport IntepretationsSubmisssionsIndex from '../intepretationSubmissionsIndex/IntepretationSubmissionsIndex';\nimport DashboardIndex from '../dashboardIndex/DashboardIndex'\nimport CategoryIndex from '../categoryIndex/CategoryIndex';\nimport shakespeareIcon from '../../assets/shakespeare.png';\nimport Error from '../error/Error';\n\nfunction App() {\n  const [savedInterpretations, setSavedInterpretations] = useState([])\n  const [favorites, setFavorites] = useState([])\n\n  const addInterpretation = (quote, newInterpretation) => {\n    const newInterpretationObj = {\n      quote: quote.quote,\n      interpretation: newInterpretation,\n      id: Date.now()\n    }\n    setSavedInterpretations([...savedInterpretations, newInterpretationObj])\n    const storageInterpretations = JSON.stringify([...savedInterpretations, newInterpretationObj]);\n    localStorage.setItem('interpretations', storageInterpretations)\n  }\n\n  const addQuote = (newFavorite, id) => {\n    if (favorites.includes(newFavorite)) {\n      return\n    }\n    const favoriteObj = {\n      quote: newFavorite,\n      id: id\n    }\n    setFavorites([...favorites, favoriteObj])\n    const storageFavorites = JSON.stringify([...favorites, favoriteObj]);\n    localStorage.setItem('favorites', storageFavorites)\n  }\n\n  const deleteQuote = (id) => {\n    const retrievedItems = JSON.parse(localStorage.getItem('favorites'))\n    const newList = retrievedItems.filter(quote => quote.id !== id);\n    const storageItems = JSON.stringify([...newList]);\n    localStorage.setItem('favorites', storageItems)\n    setFavorites(newList)\n  }\n\n  const checkLocalStorage = () => {\n    if (localStorage.favorites) {\n      const retrievedFavorites = JSON.parse(localStorage.getItem('favorites'))\n      setFavorites(retrievedFavorites)\n    }\n    if (localStorage.interpretations) {\n      const retrievedInterpretations = JSON.parse(localStorage.getItem('interpretations'))\n      setSavedInterpretations(retrievedInterpretations)\n    }\n  }\n\n  const editInterpretation = (quote, currentInterpretation, id) => {\n    const replacementInterpretationObj = {\n      quote: quote.quote,\n      interpretation: currentInterpretation,\n      id: id\n    }\n    const toSave = savedInterpretations.filter((interpretation) => {\n      return interpretation.id !== id\n    })\n    setSavedInterpretations([...toSave, replacementInterpretationObj])\n    const storageInterpretations = JSON.stringify([...toSave, replacementInterpretationObj]);\n    localStorage.setItem('interpretations', storageInterpretations)\n  }\n\n  useEffect(\n    () => {\n      checkLocalStorage()\n    }, [])\n\n  return (\n    <div className=\"App\">\n      <Link to=\"/\"><h1 className=\"logo\"> Doth Translate </h1></Link>\n      <Switch>\n        <Route\n          exact path = \"/\"\n          render={() => <DashboardIndex />}\n        />\n        <Route\n          exact path= \"/category/:type\"\n          render={(match) => <CategoryIndex category={match}/>}\n        />\n        <Route\n          exact path= \"/category/theme/:choice\"\n          render={(match) => <InterpretationIndex addInterpretation={addInterpretation} addQuote={addQuote} match={match} isEditing={false} />}\n        />\n        <Route\n          exact path= \"/category/title/:choice\"\n          render={(match) => <InterpretationIndex addInterpretation={addInterpretation} addQuote={addQuote} match={match} isEditing={false}/>}\n        />\n        <Route\n          exact path= \"/my-interpretations\"\n          render={() =><IntepretationsSubmisssionsIndex favorites={favorites} savedInterpretations={savedInterpretations} deleteQuote={deleteQuote}/>}\n        />\n        <Route\n          exact path= \"/edit/:id\"\n          render={(match) =><InterpretationIndex addInterpretation={addInterpretation} addQuote={addQuote} match={match} isEditing={true} editInterpretation={editInterpretation}/>}\n        />\n        <Route path='*' render={() => <Error type='404'/>} />\n      </Switch>\n      <nav className='back-to-main'> \n        <Link to=\"/\">\n          <img src={shakespeareIcon} alt=\"Shakespeare icon\" className=\"shakespeare\"></img>\n        </Link>\n        <div className='more-info'>\n          <p>Shakespearean Context Clues App: Grades 5-8</p>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App'\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n  <HashRouter>\n    <App />\n  </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}